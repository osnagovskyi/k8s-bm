---
# Source: nginx-ingress/templates/controller-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: nginx-ingress
    chart: nginx-ingress-0.6.0
    component: "controller"
    heritage: Tiller
    release: demo
  name: demo-nginx-ingress-controller
data:
  enable-vts-status: "false"

---
# Source: nginx-ingress/templates/controller-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: nginx-ingress
    chart: nginx-ingress-0.6.0
    component: "controller"
    heritage: Tiller
    release: demo
  name: demo-nginx-ingress-controller
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
      nodePort: 30987
    - name: https
      port: 443
      protocol: TCP
      targetPort: 443
  selector:
    app: nginx-ingress
    component: "controller"
    release: demo
  type: "NodePort"

---
# Source: nginx-ingress/templates/default-backend-service.yaml

apiVersion: v1
kind: Service
metadata:
  labels:
    app: nginx-ingress
    chart: nginx-ingress-0.6.0
    component: "default-backend"
    heritage: Tiller
    release: demo
  name: demo-nginx-ingress-default-backend
spec:
  ports:
    - port: 80
      targetPort: 8080
  selector:
    app: nginx-ingress
    component: "default-backend"
    release: demo

---
# Source: nginx-ingress/templates/controller-deployment.yaml

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: nginx-ingress
    chart: nginx-ingress-0.6.0
    component: "controller"
    heritage: Tiller
    release: demo
  name: demo-nginx-ingress-controller
spec:
  replicas: 3
  template:
    metadata:
      labels:
        app: nginx-ingress
        component: "controller"
        release: demo
    spec:
      hostNetwork: false
      containers:
        - name: nginx-ingress-controller
          image: "gcr.io/google_containers/nginx-ingress-controller:0.9.0-beta.7"
          imagePullPolicy: "IfNotPresent"
          args:
            - /nginx-ingress-controller
            - --default-backend-service=default/demo-nginx-ingress-default-backend
            - --configmap=default/demo-nginx-ingress-controller
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          livenessProbe:
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 1
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
          resources:
            {}

      terminationGracePeriodSeconds: 60

---
# Source: nginx-ingress/templates/default-backend-deployment.yaml

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: nginx-ingress
    chart: nginx-ingress-0.6.0
    component: "default-backend"
    heritage: Tiller
    release: demo
  name: demo-nginx-ingress-default-backend
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: nginx-ingress
        component: "default-backend"
        release: demo
    spec:
      containers:
        - name: nginx-ingress-default-backend
          image: "gcr.io/google_containers/defaultbackend:1.2"
          imagePullPolicy: "IfNotPresent"
          args:
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 5
          ports:
            - containerPort: 8080
              protocol: TCP
          resources:
            {}

      terminationGracePeriodSeconds: 60
